name: workFlow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-ecr-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        run: |
          docker build -t ${{ secrets.AWS_ECR_REPO_URI }}:${{ env.IMAGE_TAG }} .
          docker push ${{ secrets.AWS_ECR_REPO_URI }}:${{ env.IMAGE_TAG }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push to DockerHub
        run: |
          docker tag ${{ secrets.AWS_ECR_REPO_URI }}:${{ env.IMAGE_TAG }} ${{ secrets.DOCKER_USERNAME }}/my-image:${{ env.IMAGE_TAG }}
          docker push ${{ secrets.DOCKER_USERNAME }}/my-image:${{ env.IMAGE_TAG }}

  Continuous-Deployment:
    name: Continuous Deployment
    needs: build-and-push-ecr-image
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Pull latest image
        run: docker pull ${{ secrets.AWS_ECR_REPO_URI }}:latest

      - name: Stop and Remove Previous Container (if exists)
        run: |
          docker stop visibility || true
          docker rm visibility || true

      - name: Run Docker image to serve users
        run: docker run -d -p 8080:8080 --name=visibility \
          -e "MONGO_DB_URL=${{ secrets.MONGO_DB_URL }}" \
          -e "AWS_ACC_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -e "AWS_SEC_ACC_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          ${{ secrets.AWS_ECR_REPO_URI }}:latest

      - name: Clean previous images and containers
        run: docker system prune -f
